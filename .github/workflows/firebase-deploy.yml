name: Firebase Deploy

on:
  push:
    branches:
      - master
      - testing
jobs:
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'functions/package-lock.json'
      
      - name: Install dependencies
        run: cd functions && npm ci
      
      - name: Debug directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of current directory:"
          ls -la
          echo "Contents of functions directory:"
          ls -la functions/
          echo "Contents of functions/src directory:"
          ls -la functions/src/
          echo "Contents of functions/package.json:"
          cat functions/package.json

      - name: Build
        run: |
          cd functions
          echo "Running npm run build"
          npm run build
          echo "Build completed"
          echo "Contents of functions directory after build:"
          ls -la
          echo "Contents of lib directory (if exists):"
          if [ -d "lib" ]; then
            ls -la lib/
          else
            echo "lib directory does not exist!"
            mkdir -p lib
          fi
          
          # Copy source files directly if build failed
          if [ ! -f "lib/index.js" ]; then
            echo "lib/index.js not found, copying from src"
            cp -r src/* lib/
            # Rename .ts files to .js
            find lib -name "*.ts" -exec bash -c 'mv "$0" "${0%.ts}.js"' {} \;
            echo "Contents of lib directory after copy:"
            ls -la lib/
          fi
      
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: 'beta'

      - name: Create .gcloudignore in functions directory
        run: |
          echo "Creating .gcloudignore in functions directory..."
          cat <<EOF > functions/.gcloudignore
          # Default ignores for Node.js, keep these
          node_modules/
          # Ensure compiled JS is NOT ignored
          !lib/
          !lib/**/
          # Ignore source maps if not needed for debugging in production
          # lib/**/*.map
          # Ignore TypeScript source files
          src/
          # Other ignores
          .git/
          .gitignore
          *.log
          *.local
          EOF
          echo "Contents of functions/.gcloudignore:"
          cat functions/.gcloudignore

      - name: Deploy to Cloud Functions
        run: |
          # Set project ID based on branch
          PROJECT_ID=${{ github.ref == 'refs/heads/master' && 'structify-chris-cole' || 'chris-cole-test' }}
          
          # Create service account key file
          echo '${{ github.ref == 'refs/heads/master' && secrets.FIREBASE_SERVICE_ACCOUNT_LIVE || secrets.FIREBASE_SERVICE_ACCOUNT_TESTING }}' > /tmp/service-account.json
          
          # Authenticate with Google Cloud
          gcloud auth activate-service-account --key-file=/tmp/service-account.json
          gcloud config set project $PROJECT_ID
          
          # Deploy functions directly using gcloud from workspace root
          echo "Deploying functions from workspace root..."
          gcloud functions deploy hello --gen2 --runtime=nodejs22 --trigger-http --allow-unauthenticated --region=us-central1 --source=functions --entry-point=hello
          gcloud functions deploy createUser --gen2 --runtime=nodejs22 --trigger-http --allow-unauthenticated --region=us-central1 --source=functions --entry-point=createUser
          
          # Clean up
          rm /tmp/service-account.json
      
      - name: Log deployment info
        run: |
          echo "Deployed to project: ${{ github.ref == 'refs/heads/master' && 'structify-chris-cole' || 'chris-cole-test' }}"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"